<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProyectoEstacionSki"
        mc:Ignorable="d"
        Title="Estaciones de esquí" Icon="img/nieve.ico"
        Height="686" Width="804" MinHeight="686" MinWidth="804" Loaded="Window_Loaded">
    <Window.Resources>
        <Style TargetType="{x:Type DockPanel}" x:Key="PrincipalDockPanel">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="img/fondo.jpg" Stretch="UniformToFill"/>
                </Setter.Value>
            </Setter>
            <Setter Property="LastChildFill" Value="True"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="TituloTextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe Print"/>
            <Setter Property="FontSize" Value="60"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF4784DC" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="PrincipalBorder">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="Background" Value="LightCyan"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Margin" Value="70, 30, 70, 25"/>
            <Setter Property="Padding" Value="40, 0, 40, 0"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="DatosTextBlock">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0, 0, 5, 0"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="PieCopyrightTextBlock">
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Text" Value="©"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Text" Value="Javi"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="ImagenEstacionBorder">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="20, 0, 20, 10"/>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="AbiertaCerradaImagen">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Margin" Value="5, 0, 0, 0"/>
            <Setter Property="Source" Value="img/sad.png"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=AbiertaCheckBox, Path=IsChecked}" Value="True">
                    <Setter Property="Source" Value="img/happy.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="AbiertaTextBlock">
            <Setter Property="Margin" Value="5, 0, 0, 0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Text" Value="Abierta"/>
            <Setter Property="Background" Value="Green"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Abierta}" Value="False">
                    <Setter Property="Text" Value="Cerrada"/>
                    <Setter Property="Background" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <ControlTemplate x:Key="RedondeadoButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="4" Padding="4">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <local:ConversorPais x:Key="conversorPais"/>
    </Window.Resources>

    <DockPanel Style="{StaticResource PrincipalDockPanel}">
        <TextBlock DockPanel.Dock="Top" Style="{StaticResource TituloTextBlock}">Estaciones de esquí</TextBlock>
        <TextBlock DockPanel.Dock="Bottom" Style="{StaticResource PieCopyrightTextBlock}"></TextBlock>
        <Border Style="{StaticResource PrincipalBorder}">
            <DockPanel LastChildFill="True">
                <DockPanel DockPanel.Dock="Top" Margin="0, 10, 0, 10" LastChildFill="False">
                    <Button x:Name="CargarButton" DockPanel.Dock="Left" Template="{DynamicResource RedondeadoButtonControlTemplate}" Click="CargarButton_Click">Cargar listado</Button>
                    <Button x:Name="GuardarButton" DockPanel.Dock="Right" Template="{DynamicResource RedondeadoButtonControlTemplate}" Click="GuardarButton_Click">Guardar listado</Button>
                </DockPanel>
                <DockPanel DockPanel.Dock="Bottom" Height="150" Margin="0, 30, 0, 0">
                    <Border DockPanel.Dock="Right" Style="{StaticResource ImagenEstacionBorder}">
                        <Image x:Name="EstacionImage" Source="{Binding Logo}"/>
                    </Border>
                    <Grid x:Name="DatosModificablesEstacionGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock Style="{StaticResource DatosTextBlock}">Nombre</TextBlock>
                        <TextBox Grid.Column="1" Text="{Binding Nombre}"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource DatosTextBlock}">País</TextBlock>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Pais}"/>
                        <TextBlock Grid.Row="2" Style="{StaticResource DatosTextBlock}">Kilometros</TextBlock>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Kilometros}"/>
                        <TextBlock Grid.Row="3" Style="{StaticResource DatosTextBlock}">Abierta</TextBlock>
                        <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1">
                            <CheckBox x:Name="AbiertaCheckBox" VerticalAlignment="Center" IsChecked="{Binding Abierta}"/>
                            <Image Style="{StaticResource AbiertaCerradaImagen}"/>
                        </StackPanel>
                    </Grid>
                </DockPanel>

                <ListBox x:Name="EstacionesListBox" ItemsSource="{Binding}" SelectionChanged="EstacionesListBox_SelectionChanged">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="ListBoxNombreTextBlock" Text="{Binding Nombre}" Margin="0, 0, 5, 0"/>
                                <Image Source="{Binding Pais, Converter={StaticResource conversorPais}}" Margin="0, 0, 10, 0"/>
                                <TextBlock x:Name="ListBoxKilometrosTextBlock" Text="{Binding Kilometros}"/>
                                <TextBlock>km.</TextBlock>
                                <TextBlock x:Name="ListBoxAbiertaTextBlock" Style="{StaticResource AbiertaTextBlock}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Border>
    </DockPanel>
</Window>
